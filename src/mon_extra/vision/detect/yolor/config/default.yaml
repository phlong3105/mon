# Default training settings

# Train settings -------------------------------------------------------------------------------------------------------
model        : yolor_p6.yaml          # *.cfg path (yolor_p6.yaml, yolor_e6.yaml, yolor_p6.yaml, yolor_w6.yaml)
data         : coco.yaml              # data.yaml path
project      :                        # (str, optional) project name
name         :                        # (str, optional) experiment name, results saved to 'project/name' directory
weights      : yolor_p6.pt            # Initial weights path
device       :                        # (int | str | list, optional) device to run on, i.e. cuda device=0 or device=0,1,2,3 or device=cpu
hyp          : hyp.scratch.1280.yaml  # path to hyperparameters file
epochs       : 300                    # (int) number of epochs to train for
batch_size   : 16                     # (int) number of images per batch (-1 for AutoBatch)
imgsz        : 1280                   # (int | list) input images size as int for train and val modes, or list[w,h] for predict and export modes
cache_images : False                  # (bool) True/ram, disk or False. Use cache for data loading
rect         : False                  # (bool) rectangular training if mode='train' or rectangular validation if mode='val'
noautoanchor : False                  # (bool) disable autoanchor check
image_weights: False                  # (bool) use weighted image selection for training
multi_scale  : False                  # (bool) use multi-scale training
single_cls   : False                  # (bool) train multi-class data as single-class
adam         : False                  # (bool) use Adam optimizer
sync_bn      : False                  # (bool) use SyncBatchNorm, only available in DDP mode
evolve       : False                  # (bool) evolve hyperparameters
bucket       :                        # (str, optional) gsutil bucket
local_rank   : -1                     # (int, optional) DDP parameter, do not modify
log_imgs     : 10                     # (int) number of images to save in log
workers      : 8                      # (int) number of worker threads for data loading (per RANK if DDP)
nosave       : False                  # (bool) only save final checkpoint
notest       : False                  # (bool) only test final epoch
resume       : False                  # (bool) resume training from last checkpoint
exist_ok     : False                  # (bool) whether to overwrite existing experiment
verbose      : True                   # (bool) whether to print verbose output

# Val/Test settings ----------------------------------------------------------------------------------------------------
task         : val                    # (str) 'val', 'test', 'study'
names        : coco.names             # (str) class names
save_json    : False                  # (bool) save results to JSON file
conf         : 0.001                  # (float, optional) object confidence threshold for detection (default 0.25 predict, 0.001 val)
iou          : 0.5                    # (float) intersection over union (IoU) threshold for NMS
max_det      : 1000                   # (int) maximum number of detections per image

# Predict settings -----------------------------------------------------------------------------------------------------
source       :                        # (str, optional) source directory for images or videos
augment      : False                  # (bool) apply image augmentation to prediction sources
agnostic_nms : False                  # (bool) class-agnostic NMS
classes      :                        # (int | list[int], optional) filter results by class, i.e. classes=0, or classes=[0,2,3]
update       : False                  # (bool) update all models

# Visualize settings ---------------------------------------------------------------------------------------------------
view_img     : False                  # (bool) show predicted images and videos if environment allows
save_txt     : True                   # (bool) save results as .txt file
save_conf    : True                   # (bool) save results with confidence scores
