# How often do you want to log the training stats.
logging_iter: 2
# Number of training epochs.
max_iter: 2
# Whether to benchmark speed or not.
speed_benchmark: True
trainer:
    type: imaginaire.trainers.munit
    amp_config:
        enabled: True
    image_to_tensorboard: True
    gan_mode: hinge
    perceptual_mode: vgg19
    perceptual_layers: 'relu_4_1'
    loss_weight:
        gan: 1
        image_recon: 1
        content_recon: 1
        style_recon: 1
        perceptual: 0
        cycle_recon: 1
        gp: 0
        consistency_reg: 0
    init:
        type: orthogonal
        gain: 1
gen_opt:
    type: adam
    lr: 0.0001
    adam_beta1: 0.5
    adam_beta2: 0.999
    lr_policy:
        iteration_mode: True
        type: step
        step_size: 100000
        gamma: 1
dis_opt:
    type: adam
    lr: 0.0004
    adam_beta1: 0.5
    adam_beta2: 0.999
    lr_policy:
        iteration_mode: True
        type: step
        step_size: 100000
        gamma: 1
gen:
    type: imaginaire.generators.munit
    latent_dim: 8
    num_filters: 64
    num_filters_mlp: 256
    num_res_blocks: 4
    num_mlp_blocks: 2
    num_downsamples_style: 4
    num_downsamples_content: 2
    content_norm_type: instance
    style_norm_type: none
    decoder_norm_type: instance
    weight_norm_type: spectral
    pre_act: True
dis:
    type: imaginaire.discriminators.munit
    patch_wise: False
    num_filters: 32
    max_num_filters: 512
    num_layers: 6
    activation_norm_type: none
    weight_norm_type: spectral

# Data options.
data:
    # Name of this dataset.
    name: 'test'
    # Which dataloader to use?
    type: 'imaginaire.datasets.unpaired_images'
    # How many data loading workers per GPU?
    num_workers: 1
    input_types:
        - images_a:
            # If not specified, is None by default.
            ext: jpg
            # If not specified, is None by default.
            num_channels: 3
            # If not specified, is None by default.
            normalize: True
            # If not specified, is None by default.
            pre_aug_ops: None
            # If not specified, is None by default.
            post_aug_ops: None
        - images_b:
            # If not specified, is None by default.
            ext: jpg
            # If not specified, is None by default.
            num_channels: 3
            # If not specified, is None by default.
            normalize: True
            # If not specified, is None by default.
            pre_aug_ops: None
            # If not specified, is None by default.
            post_aug_ops: None

    # Train dataset details.
    train:
        # Input LMDBs.
        roots:
            - dataset/unit_test/raw/munit
        # Batch size per GPU.
        batch_size: 1
        # Data augmentations to be performed in given order.
        augmentations:
            # First resize all inputs to this size.
            resize_h_w: 256, 256
            # Rotate in (-rotate, rotate) in degrees.
            rotate: 4
            # Scale image by factor \in [1, 1+random_scale_limit].
            random_scale_limit: 0.1
            # Horizontal flip?
            horizontal_flip: True
            # Crop size.
            random_crop_h_w: 256, 256

    # Val dataset details.
    val:
        # Input LMDBS.
        roots:
            - dataset/unit_test/raw/munit
        # Batch size per GPU.
        batch_size: 1
        # If resize_h_w is not given, then it is assumed to be same as crop_h_w.
        augmentations:
            center_crop_h_w: 256, 256
