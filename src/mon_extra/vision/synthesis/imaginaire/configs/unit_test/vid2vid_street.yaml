# How often do you want to log the training stats.
logging_iter: 2
# Number of training epochs.
max_iter: 2
# Number of epochs training single frame generator.
single_frame_epoch: 0
# How often to double the number of training frames in each clip.
num_epochs_temporal_step: 40

# Trainer options.
trainer:
    type: imaginaire.trainers.vid2vid
    amp_config:
        enabled: True
    model_average_config:
        enabled: True
        beta: 0.999
        start_iteration: 500
        num_batch_norm_estimation_iterations: 0
    num_videos_to_test: 64
    num_frames_per_video: 10
    gan_mode: hinge
    gan_relativistic: False
    perceptual_loss:
        mode: 'vgg19'
        layers: ['relu_1_1', 'relu_2_1', 'relu_3_1', 'relu_4_1', 'relu_5_1']
        weights: [0.03125, 0.0625, 0.125, 0.25, 1.0]
    loss_weight:
        gan: 1.0
        feature_matching: 10.0
        temporal_gan: 0.0
        perceptual: 10.0
        flow: 10.0
    init:
        type: xavier
        gain: 0.02
    distributed_data_parallel_params:
        find_unused_parameters: True

# optimization option
gen_opt:
    type: adam
    lr: 0.0001
    adam_beta1: 0.
    adam_beta2: 0.999
    lr_policy:
        iteration_mode: False
        type: step
        step_size: 20
        gamma: 0.9
dis_opt:
    type: adam
    lr: 0.0004
    adam_beta1: 0.
    adam_beta2: 0.999
    lr_policy:
        iteration_mode: False
        type: step
        step_size: 20
        gamma: 0.9

# Model options.
gen:
    type: imaginaire.generators.vid2vid
    num_layers: 7
    num_downsamples_img: 4
    num_filters: 8
    max_num_filters: 128
    kernel_size: 3
    activation_norm_type: spatially_adaptive
    activation_norm_params:
        activation_norm_type: instance
        num_filters: 0
        kernel_size: 1
    weight_norm_type: spectral
    style_dims: 256
    use_segmap_as_input: True
    flow:
        num_filters: 8
        max_num_filters: 128
        num_downsamples: 5
        num_res_blocks: 6
        activation_norm_type: instance
        weight_norm_type: spectral
        flow_output_multiplier: 40
        generate_raw_output: False
        multi_spade_combine:
            num_layers: 3
            embed:
                arch: unet
                num_filters: 8
                num_downsamples: 5
                kernel_size: 3
                weight_norm_type: spectral
    embed:
        use_embed: True
        arch: encoderdecoder
        num_filters: 8
        max_num_filters: 128
        num_downsamples: 5
        kernel_size: 3
        weight_norm_type: spectral

dis:
    type: imaginaire.discriminators.fs_vid2vid
    image:
        num_filters: 8
        max_num_filters: 128
        num_discriminators: 2
        num_layers: 3
        weight_norm_type: none
        activation_norm_type: instance
flow_network:
    type: imaginaire.third_party.flow_net.flow_net
# Data options.
data:
    # Name of this dataset.
    name: 'cityscapes'
    # Which dataloader to use?
    type: imaginaire.datasets.paired_videos
    num_frames_G: 3
    num_frames_D: 3

    # How many data loading workers per GPU?
    num_workers: 4
    input_types:
        - images:
            ext: png
            num_channels: 3
            normalize: True
        - seg_maps:
            ext: png
            num_channels: 1
            is_mask: True
            normalize: False

    full_data_ops: imaginaire.model_utils.label::make_one_hot, imaginaire.model_utils.label::concat_labels
    use_dont_care: False
    one_hot_num_classes:
        seg_maps: 35
    input_labels:
        - seg_maps

    input_image:
        - images

    # Train dataset details.
    train:
        # Input LMDBs.
        roots:
            - dataset/unit_test/raw/vid2vid/street
        # Batch size per GPU.
        batch_size: 1
        initial_sequence_length: 4
        # Data augmentations to be performed in given order.
        augmentations:
            resize_h_w: 512, 1024
            horizontal_flip: False

    # Validation dataset details.
    val:
        # Input LMDBs.
        roots:
            - dataset/unit_test/raw/vid2vid/street
        # Batch size per GPU.
        batch_size: 1
        # If resize_h_w is not given, then it is assumed to be same as crop_h_w.
        augmentations:
            resize_h_w: 512, 1024
            horizontal_flip: False
