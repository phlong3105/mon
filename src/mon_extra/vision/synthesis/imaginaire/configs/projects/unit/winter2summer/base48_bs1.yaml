pretrained_weight: 1y1FJT_kRq80Se6ASCU3LFZwrrJKzHr4I
inference_args:
    # Translates images from domain A to B or from B to A.
    a2b: True

image_display_iter: 5000
image_save_iter: 20000
snapshot_save_iter: 20000
max_iter: 500000
logging_iter: 50
trainer:
    type: imaginaire.trainers.unit
    model_average_config:
        enabled: True
    gan_mode: least_square
    perceptual_mode: vgg19
    perceptual_layers: 'relu_4_1'
    loss_weight:
        gan: 1
        image_recon: 1
        cycle_recon: 1
        perceptual: 0
    init:
        type: normal
        gain: 0.02
# Optimization option.
gen_opt:
    type: adam
    lr: 0.0001
    adam_beta1: 0.
    adam_beta2: 0.999
    lr_policy:
        iteration_mode: False
        type: step
        step_size: 100
        gamma: 0.5
dis_opt:
    type: adam
    lr: 0.0001
    adam_beta1: 0.
    adam_beta2: 0.999
    lr_policy:
        iteration_mode: False
        type: step
        step_size: 100
        gamma: 0.5
gen:
    type: imaginaire.generators.unit
    num_filters: 48
    num_res_blocks: 4
    num_downsamples_content: 2
    content_norm_type: instance
    decoder_norm_type: instance
    weight_norm_type: none
    pre_act: True
    all_res: True
dis:
    type: imaginaire.discriminators.unit
    num_discriminators: 3
    kernel_size: 3
    num_filters: 48
    num_layers: 4
    max_num_filters: 512
    weight_norm_type: spectral

# Data options.
data:
    # Name of this dataset.
    name: 'test'
    # Which dataloader to use?
    type: 'imaginaire.datasets.unpaired_images'
    # How many data loading workers per GPU?
    num_workers: 8
    input_types:
        - images_a:
            # If not specified, is None by default.
            ext: jpg
            # If not specified, is None by default.
            num_channels: 3
            # If not specified, is None by default.
            normalize: True
        - images_b:
            # If not specified, is None by default.
            ext: jpg
            # If not specified, is None by default.
            num_channels: 3
            # If not specified, is None by default.
            normalize: True

    # Train dataset details.
    train:
        # Input LMDBs.
        roots:
            - datasets/summer2winter/train
        # Batch size per GPU.
        batch_size: 1
        # Data augmentations to be performed in given order.
        augmentations:
            # First resize all inputs to this size.
            resize_smallest_side: 512
            random_scale_limit: 0.2
            # Horizontal flip?
            horizontal_flip: True
            # Crop size.
            random_crop_h_w: 512, 512

    # Val dataset details.
    val:
        # Input LMDBS.
        roots:
            - datasets/summer2winter/train
        # Batch size per GPU.
        batch_size: 1
        # If resize_h_w is not given, then it is assumed to be same as crop_h_w.
        augmentations:
            resize_smallest_side: 512
            center_crop_h_w: 512, 512

test_data:
    # Which dataloader to use?
    type: imaginaire.datasets.unpaired_images
    input_types:
        - images_a:
              ext: jpg
              num_channels: 3
              normalize: True
        - images_b:
              ext: jpg
              num_channels: 3
              normalize: True

    # Which labels to be concatenated as final output label from dataloader.
    paired: False
    # Validation dataset details.
    test:
        is_lmdb: False
        roots:
            - projects/unit/test_data/summer2winter_test
        # Batch size per GPU.
        batch_size: 1
        # If resize_h_w is not given, then it is assumed to be same as crop_h_w.
        augmentations:
            resize_smallest_side: 512